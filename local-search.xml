<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Qt:USB热拔插检测</title>
    <link href="/2020/05/22/Qt-USB%E7%83%AD%E6%8B%94%E6%8F%92%E6%A3%80%E6%B5%8B/"/>
    <url>/2020/05/22/Qt-USB%E7%83%AD%E6%8B%94%E6%8F%92%E6%A3%80%E6%B5%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>Windows 系统<br>Qt5.4<br>c++语言</p><h1 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h1><p>让程序运行过程中能监测某一USB设备的拔插状态，当设备被拔出时进行相关处理。</p><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><p>见 <a href="https://docs.microsoft.com/en-us/windows/win32/devio/device-messages" target="_blank" rel="noopener">MSDN Device Messages</a> 说明：</p><blockquote><p>For each device event, the system broadcasts a <font color = blue>WM_DEVICECHANGE</font> message to all applications. In this message, the <font color = blue>wParam</font> parameter identifies the <font color = green>device event type</font> and the <font color = blue>lParam</font> parameter is a <font color = green>pointer to event-specific data</font>.</p></blockquote><p>然而， <font color = blue>WM_DEVICECHANGE</font> 消息只会通知给TOP窗口，见 <a href="https://docs.microsoft.com/en-us/windows/win32/devio/detecting-media-insertion-or-removal" target="_blank" rel="noopener">Detecting Media Insertion or Removal</a>说明：</p><blockquote><p>Windows sends all top-level windows a set of default WM_DEVICECHANGE messages when new devices or media (such as a CD or DVD) are added and become available, and when existing devices or media are removed.</p></blockquote><p>但软件运行过程中TOP窗口并不固定，因此，选择一个软件开启到退出都会一直存在，不会析构的窗口<a href="https://docs.microsoft.com/en-us/windows/win32/devio/registering-for-device-notification" target="_blank" rel="noopener">注册消息</a>来获取想要的消息通知。</p><p>注册消息用到函数是 <a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-registerdevicenotificationw" target="_blank" rel="noopener">RegisterDeviceNotification</a>:</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-comment">/*</span><span class="hljs-comment">winuser.h 头文件定义：如果是 unicode 编码，</span><span class="hljs-comment">则用 RegisterDeviceNotificationW，</span><span class="hljs-comment">其他则用 RegisterDeviceNotificationA</span><span class="hljs-comment">*/</span><span class="hljs-function">HDEVNOTIFY <span class="hljs-title">RegisterDeviceNotificationW</span><span class="hljs-params">(</span></span><span class="hljs-function"><span class="hljs-params">  HANDLE hRecipient, <span class="hljs-comment">//指向窗口或服务的句柄</span></span></span><span class="hljs-function"><span class="hljs-params">  LPVOID NotificationFilter, <span class="hljs-comment">//接受设备通知句柄</span></span></span><span class="hljs-function"><span class="hljs-params">  DWORD  Flags <span class="hljs-comment">//说明 hRecipient 是用的窗口句柄还是设备服务句柄</span></span></span><span class="hljs-function"><span class="hljs-params">)</span></span>;</code></pre></div><blockquote><p><font color = green>NotificationFilter</font>:<br>A pointer to a block of data that specifies the type of device for which notifications should be sent. This block always begins with the <font color = blue>DEV_BROADCAST_HDR</font> structure. The data following this header is dependent on the value of the <font color = blue>dbch_devicetype</font> member, which can be <font color = blue>DBT_DEVTYP_DEVICEINTERFACE</font> or <font color = blue>DBT_DEVTYP_HANDLE</font>.<br>&nbsp;<br><font color = blue>DBT_DEVTYP_DEVICEINTERFACE</font>:<br>Class of devices. This structure is a <font color = blue>DEV_BROADCAST_DEVICEINTERFACE</font> structure.</p></blockquote><p>MSDN 例子中 NotificationFilter 参数用的是 DEV_BROADCAST_DEVICEINTERFACE 结构体，指明设备类型为设备接口类 DBT_DEVTYP_DEVICEINTERFACE 以及用来注册消息的 device interface class GUID。不同GUID说明见<a href="https://www.cnblogs.com/findstr/p/3518197.html" target="_blank" rel="noopener">USB设备的插入检测</a></p><blockquote><p><font color = green>Flags</font>:<br><font color = blue>DEVICE_NOTIFY_WINDOW_HANDLE</font>: hRecipient is a windows handle<br><font color = blue>DEVICE_NOTIFY_SERVICE_HANDLE</font>: hRecipient is a service status handle</p></blockquote><h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-comment">//注册消息需要添加头文件</span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Dbt.h&gt;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;windows.h&gt;</span></span><span class="hljs-comment">//注册消息 </span><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">CLogin::RegisterHIVDeviceNotification</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    HDEVNOTIFY hDeviceNotify;    <span class="hljs-comment">/*</span><span class="hljs-comment">     *这里注册的设备是  Human Interface Devices (HID) 类</span><span class="hljs-comment">     *GUID_DEVINTERFACE_HID = &#123;4D1E55B2-F16F-11CF-88CB-001111000030&#125;</span><span class="hljs-comment">    */</span>    GUID  guid_hiv = &#123;<span class="hljs-number">0x4D1E55B2</span>, <span class="hljs-number">0xF16F</span>, <span class="hljs-number">0x11CF</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x30</span>&#125;;    DEV_BROADCAST_DEVICEINTERFACE NotificationFilter;    HWND hWnd = (HWND)(<span class="hljs-keyword">this</span>-&gt;winId()); <span class="hljs-comment">//获取当前窗口句柄</span>    ZeroMemory(&amp;NotificationFilter, <span class="hljs-keyword">sizeof</span>(NotificationFilter));    NotificationFilter.dbcc_size = <span class="hljs-keyword">sizeof</span>(DEV_BROADCAST_DEVICEINTERFACE);    NotificationFilter.dbcc_devicetype = DBT_DEVTYP_DEVICEINTERFACE;    NotificationFilter.dbcc_classguid = guid_hiv;    hDeviceNotify = RegisterDeviceNotification (hWnd, &amp;NotificationFilter, DEVICE_NOTIFY_WINDOW_HANDLE);    <span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == hDeviceNotify)        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;    <span class="hljs-keyword">else</span>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>; <span class="hljs-comment">//注册消息成功</span>&#125;<span class="hljs-comment">//处理接受到的消息</span><span class="hljs-comment">// nativeEvent 是重载的虚函数</span><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">CLogin::nativeEvent</span><span class="hljs-params">(<span class="hljs-keyword">const</span> QByteArray &amp;eventType, <span class="hljs-keyword">void</span> *message, <span class="hljs-keyword">long</span> *result)</span></span><span class="hljs-function"></span>&#123;    Q_UNUSED(eventType); <span class="hljs-comment">//未用该参数</span>    Q_UNUSED(result); <span class="hljs-comment">//未用该参数</span>    MSG *msg = <span class="hljs-keyword">reinterpret_cast</span>&lt;MSG*&gt;(message);    <span class="hljs-comment">//消息类型是 设备改变 且为 设备拔出</span>    <span class="hljs-keyword">if</span> (msg-&gt;message == WM_DEVICECHANGE &amp;&amp; msg-&gt;wParam == DBT_DEVICEREMOVECOMPLETE)    &#123;        <span class="hljs-function">emit <span class="hljs-title">SigDeviceRemove</span><span class="hljs-params">()</span></span>; <span class="hljs-comment">//发送信号处理</span>    &#125;    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>; &#125;</code></pre></div><h1 id="疑问"><a href="#疑问" class="headerlink" title="疑问"></a>疑问</h1><h2 id="1-native-Event-返回值"><a href="#1-native-Event-返回值" class="headerlink" title="1. native Event 返回值"></a>1. native Event 返回值</h2><p>返回 false 表示消息继续传递，开始在消息处理后返回 true ，结果界面为空白，没明白原因???<br>用事件过滤器时处理完消息返回true都没问题</p><h2 id="2-用-nativeEventFilter-处理消息"><a href="#2-用-nativeEventFilter-处理消息" class="headerlink" title="2. 用 nativeEventFilter 处理消息"></a>2. 用 nativeEventFilter 处理消息</h2><p>参考： <a href="https://www.cnblogs.com/yinwei-space/p/10655371.html" target="_blank" rel="noopener">Qt: usb热插拔检测(windows)</a> 里介绍方法，用 nativeEventFilter 来处理消息，在主程序main.cpp中安装事件过滤器 installNativeEventFilter。</p><p>实现函数 nativeEventFilter 的类需要继承 QAbstractNativeEventFilter，之前用该方法没成功实现，用该方法时未注册消息，以后补充。</p>]]></content>
    
    
    <categories>
      
      <category>read</category>
      
      <category>Qt</category>
      
    </categories>
    
    
    <tags>
      
      <tag>read</tag>
      
      <tag>Qt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/05/10/hello-world/"/>
    <url>/2020/05/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="hljs"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span></code></pre></div><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="hljs"><pre><code class="hljs bash">$ hexo server</code></pre></div><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="hljs"><pre><code class="hljs bash">$ hexo generate</code></pre></div><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="hljs"><pre><code class="hljs bash">$ hexo deploy</code></pre></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
